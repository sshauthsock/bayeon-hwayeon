# .github/workflows/deploy.yml
# This workflow is for deploying the frontend (SPA) to GitHub Pages.

name: Deploy Frontend to GitHub Pages # 워크플로우 이름 (프론트엔드 전용)

on:
  push:
    branches:
      - main # <<-- 여러분의 기본 브랜치 (main 또는 master)에 맞춰 설정

jobs:
  deploy-frontend: # 작업 이름 (프론트엔드 전용)
    runs-on: ubuntu-latest # GitHub Actions는 Ubuntu 가상 환경에서 실행

    # GitHub Actions 워크플로우 자체의 권한 설정
    permissions:
      contents: write # 저장소 콘텐츠(gh-pages 브랜치)에 쓰기 권한
      pages: write # GitHub Pages 배포를 위한 권한
      id-token: write # GitHub Pages v3 액션의 OIDC 관련 (현재 JamesIves 액션에는 불필요할 수 있으나 안전을 위해 유지)

    # 환경 변수 설정 (이제 필요 없음)
    # env:
    # GCP 관련 환경 변수, JS/CSS 관련 도구 등은 이제 필요 없습니다.

    steps:
      - name: Checkout repository # GitHub 저장소 코드를 가상 머신으로 가져옵니다.
        uses: actions/checkout@v3

      # [수정 시작] 모든 프론트엔드 처리 스텝들 제거 (Node.js setup, Install tools, Process JS/CSS, Update HTML)
      # 이 스텝들은 이제 필요 없습니다.
      # - name: Setup Node.js (for JS/CSS processing)
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: "16"
      # - name: Install JavaScript/CSS tools
      #   run: |
      #     npm install -g javascript-obfuscator
      #     npm install -g clean-css-cli
      # - name: Create dist directory and copy files
      #   run: |
      #     rm -rf dist
      #     mkdir -p dist
      #     rsync -av --exclude='.git/' --exclude='dist/' --exclude='node_modules/' --exclude='.env' --exclude='.github/' . dist/ || true
      #     find dist -type f -name ".*" ! -name ".nojekyll" -delete || true
      # - name: Process JS files (Obfuscate and rename)
      #   run: |
      #     timestamp=$(date +%s) ... (생략) ...
      # - name: Process CSS files (Minify and rename)
      #   run: |
      #     timestamp=$(date +%s) ... (생략) ...
      # - name: Update HTML files to use processed JS and CSS
      #   run: |
      #     node -e '...' ... (생략) ...
      # [수정 끝]

      - name: Prepare index.html for GitHub Pages (only if index.html is NOT at root)
        # 이 스텝은 이제 index.html이 루트에 있으므로 필요 없습니다.
        # 그러나 안전을 위해 남겨두거나 삭제할 수 있습니다.
        # 만약 index.html이 루트에 있고, 다른 파일로 리다이렉트하는 용도가 아니라면,
        # 이 스텝은 삭제하는 것이 더 명확합니다.
        run: |
          echo "Ensuring index.html is the entry point for SPA. No special redirect needed."

      # -------------------------------------------------------------
      # 2. Deploy Frontend to GitHub Pages
      #    원본 파일들을 GitHub Pages로 배포합니다.
      # -------------------------------------------------------------
      - name: Deploy Frontend to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages # 배포할 브랜치 (gh-pages 브랜치가 없으면 자동으로 생성됨)
          folder: . # 저장소 루트의 파일들을 배포합니다.
          clean: true # gh-pages 브랜치의 이전 내용을 정리하고 배포
          token: ${{ secrets.GITHUB_TOKEN }} # GitHub Pages 배포 권한을 가진 토큰 (GitHub Actions가 자동으로 제공)


      # -------------------------------------------------------------
      # 백엔드 배포 관련 스텝들은 모두 제거됨 (프론트엔드 전용 워크플로우)
      # -------------------------------------------------------------
